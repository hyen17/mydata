(async () => {
  const wait = ms => new Promise(res => setTimeout(res, ms));
  const waitForMathJax = async () => {
    if (window.MathJax?.startup?.promise) await MathJax.startup.promise;
    else await wait(1000);
  };

  const data = [];

  while (true) {
    await waitForMathJax();

    const questionBlock = document.querySelector('div.contentBlock--practice.contentBlock--print');
    const questionHTML = questionBlock?.outerHTML || '';

    const answers = [];
    document.querySelectorAll('label._answer_1f8fe_1').forEach((el, i) => {
      const isCorrect = el.classList.contains('_is-correct_1f8fe_79');
      const rawTextEl = el.querySelector('div._text_1f8fe_9');
      const textHTML = rawTextEl?.textContent.trim() || '';
      const letter = String.fromCharCode(65 + i);
      answers.push({ letter, textHTML, isCorrect });
    });

    const explanationBlock = document.querySelector('div._supplementAreaDesktop_13gwe_59 div.contentBlock--practice.contentBlock--print');
    const explanationHTML = explanationBlock?.outerHTML || '';

    data.push({ questionHTML, answers, explanationHTML });

    const nextBtn = document.querySelector('button._next_1025s_1');
    if (!nextBtn || nextBtn.disabled) break;
    nextBtn.click();
    await wait(2000);
  }

  const css = (isAnswer) => `
    <style>
      body {
        font-family: Arial, sans-serif;
        font-size: 16px;
        line-height: 1.6;
        color: #000;
        padding: 40px;
        white-space: normal;
      }
      hr { margin: 12px 0; }
      table {
        border-collapse: collapse;
        width: 100%;
        margin-bottom: 16px;
        font-size: 16px;
      }
      table, th, td {
        border: 1px solid black;
        padding: 4px;
        text-align: center;
      }
      .question {
        ${isAnswer ? 'page-break-after: always;' : 'break-inside: avoid;'}
        margin-bottom: 24px;
      }
      .answer-line {
        display: flex;
        align-items: flex-start;
        margin: 6px 0;
      }
      .answer-line strong {
        margin-right: 6px;
        min-width: 18px;
        display: inline-block;
      }
      mjx-container svg {
        stroke: black !important;
        fill: black !important;
      }
    </style>
  `;

  const renderPageHTML = (item, idx, total, showAnswer = false) => {
    const answerBlock = item.answers.map(a => `
      <div class="answer-line">
        <strong>${a.letter}.</strong>
        <span style="${showAnswer && a.isCorrect ? 'font-weight:bold;' : ''}">
          ${a.textHTML}
        </span>
      </div>
    `).join('');

    const explanationBlock = showAnswer
      ? `<div style="margin-top:12px;"><b><i>Explanation:</i></b><br>${item.explanationHTML}</div>`
      : '';

    const sanitizedQuestion = item.questionHTML.replace(/<mjx-assistive-mml[^>]*>[\s\S]*?<\/mjx-assistive-mml>/g, '');
    const sanitizedExplanation = explanationBlock.replace(/<mjx-assistive-mml[^>]*>[\s\S]*?<\/mjx-assistive-mml>/g, '');

    return `
      <div class="question">
        <div style="font-weight:bold; font-size:17px; margin-bottom:4px;">
          QUESTION ${idx + 1} of ${total}
        </div>
        <hr style="margin-bottom:12px;">
        <div style="font-weight:normal;">
          ${sanitizedQuestion}
        </div>
        <div style="margin-top:12px;">
          ${answerBlock}
        </div>
        ${sanitizedExplanation}
      </div>
    `;
  };

  const openPrintTab = (isAnswer = false) => {
    const html = `
      <html>
        <head>
          <title>${isAnswer ? "Answers" : "Questions"}</title>
          <script>
            window.MathJax = { startup: { typeset: false } };
            window.onload = () => setTimeout(() => window.print(), 800);
          </script>
          ${css(isAnswer)}
        </head>
        <body>
          ${data.map((item, i) => renderPageHTML(item, i, data.length, isAnswer)).join('')}
        </body>
      </html>
    `;
    const tab = window.open('', '_blank');
    tab.document.write(html);
    tab.document.close();
  };

  openPrintTab(false); // Auto-print Questions
  openPrintTab(true);  // Auto-print Answers
})();
